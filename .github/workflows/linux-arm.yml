name: generate-arm-builds
on:
  push:
  pull_request:
jobs:
  generate-soh-otr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ runner.os }}-soh-otr-ccache
    - name: Install dependencies
      if: ${{ !vars.LINUX_RUNNER }}
      run: |
        sudo apt-get update
        sudo apt-get install -y $(cat .github/workflows/apt-deps.txt)
    - name: Install latest SDL
      if: ${{ !vars.LINUX_RUNNER }}
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        wget https://www.libsdl.org/release/SDL2-2.26.1.tar.gz
        tar -xzf SDL2-2.26.1.tar.gz
        cd SDL2-2.26.1
        ./configure
        make -j 10
        sudo make install
        sudo cp -av /usr/local/lib/libSDL* /lib/x86_64-linux-gnu/
    - name: Install latest SDL_net
      if: ${{ !vars.LINUX_RUNNER }}
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        wget https://www.libsdl.org/projects/SDL_net/release/SDL2_net-2.2.0.tar.gz
        tar -xzf SDL2_net-2.2.0.tar.gz
        cd SDL2_net-2.2.0
        ./configure
        make -j 10
        sudo make install
        sudo cp -av /usr/local/lib/libSDL* /lib/x86_64-linux-gnu/
    - name: Generate soh.otr
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        cmake --no-warn-unused-cli -H. -Bbuild-cmake -GNinja -DCMAKE_BUILD_TYPE:STRING=Release
        cmake --build build-cmake --config Release --target ZAPD
        mkdir Extract
        cp -r OTRExporter/assets/ ./Extract/assets
        ./build-cmake/ZAPD/ZAPD.out botr -se OTR --norom
    - uses: actions/upload-artifact@v3
      with:
        name: soh.otr
        path: soh.otr
        retention-days: 1

  build-linux:
    needs: generate-soh-otr
    strategy:
      fail-fast: true
      matrix:
        include:
        - os: ubuntu-20.04
          gcc: 10
          archive-suffix: compatibility
    runs-on: ${{ (matrix.os == 'ubuntu-20.04' && ((vars.LINUX_COMPATIBILITY_RUNNER && fromJSON(vars.LINUX_COMPATIBILITY_RUNNER)) || matrix.os)) || (matrix.os == 'ubuntu-22.04' && ((vars.LINUX_PERFORMANCE_RUNNER && fromJSON(vars.LINUX_PERFORMANCE_RUNNER)) || matrix.os)) }}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2.1.0
      
    - name: Add Dockerfile
      run: |
        echo "FROM debian:bullseye

        WORKDIR /home/build/

        RUN apt update -qq
        RUN apt install -qq -y $(cat .github/workflows/apt-deps.txt) wget gcc g++ curl python3 cmake make lld lsb-release

        WORKDIR /home/sdl/
        RUN wget https://www.libsdl.org/release/SDL2-2.26.1.tar.gz
        RUN tar -xzf SDL2-2.26.1.tar.gz
        WORKDIR /home/sdl/SDL2-2.26.1/
        RUN ./configure
        RUN make -j 10
        RUN make install
        RUN cp -av /usr/local/lib/libSDL* /lib/aarch64-linux-gnu/

        WORKDIR /home/sdl-net/
        RUN wget https://www.libsdl.org/projects/SDL_net/release/SDL2_net-2.2.0.tar.gz
        RUN tar -xzf SDL2_net-2.2.0.tar.gz
        WORKDIR /home/sdl-net/SDL2_net-2.2.0/
        RUN ./configure
        RUN make -j 10
        RUN make install
        RUN cp -av /usr/local/lib/libSDL* /lib/aarch64-linux-gnu/

        WORKDIR /home/build/
        RUN cmake --no-warn-unused-cli -H. -Bbuild-cmake -GNinja -DCMAKE_BUILD_TYPE:STRING=Release
        RUN cmake --build build-cmake --config Release -j4
        RUN (cd build-cmake && cpack -G External)
        RUN mv README.md readme.txt
        RUN mv build-cmake/*.appimage soh.appimage
        " > Dockerfile
 
    - name: Download soh.otr
      uses: actions/download-artifact@v3
      with:
        name: soh.otr
        
    - name: Build the Docker Image
      env:
        CC: gcc-${{ matrix.gcc }}
        CXX: g++-${{ matrix.gcc }}
      run: |
        podman build . -v=`pwd`:/home/build/ --file Dockerfile --platform=linux/arm64 --jobs=`nproc`
 
      
    - name: Upload build
      uses: actions/upload-artifact@v3
      with:
        name: soh-linux-${{ matrix.archive-suffix }}
        path: |
          soh.appimage
          readme.txt
